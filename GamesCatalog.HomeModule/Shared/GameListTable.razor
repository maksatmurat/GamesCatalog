@rendermode InteractiveServer

<h3>GameListTable answer for @Name</h3>

<div class="row mb-3">
    <div class="col">
        <select @onchange="ChangeTableStyle" class="btn btn-toolbar border dropdown-toogle">
            <option selected value="">Choose Table Style</option>
            @foreach (var item in AppStyle!.TableStyle)
            {
                <option selected value="@item.Value">@item.Text</option>
            }
        </select>
    </div>
</div>
<div class="table-responsive">
    <table class="table @currentTableStyle">
        <thead class="thead-light">
            <tr>
                <th>Name</th>
                <th>Genre</th>
                <th>Release Date</th>
                <th>
                    <input type="checkbox" @bind="displayButton" />
                </th>
            </tr>
        </thead>
        <tbody>
            <GenericList ListOfItems="Games" EmptyList="EmptyList1" NullList="NullList1">
                <ItemTemplate Context="game">
                    <IndividualGame Game="game" IsTable="true" DisplayButton="displayButton" DeleteGame="DeleteTheGame" />
                </ItemTemplate>
            </GenericList>
            <Confirmation @ref="confirmation" onCancel="OnCancel" onConfirm="OnConfirm">
                <div class="text-danger"> Do you wish to delete @gameToBeDeleted!.Name!.ToLower()</div>
            </Confirmation>
        </tbody>
    </table>
</div>

@code{
    [Parameter] public RenderFragment? EmptyList1 { get; set; }
    [Parameter] public RenderFragment? NullList1 { get; set; }

    [Parameter] public List<Game>? Games { get; set; }
    bool displayButton = false;
    [Parameter] public string? Name { get; set; }
    [Inject][CascadingParameter] public AppStyle? AppStyle { get; set; }


    void DeleteTheGame(Game game)
    {
        gameToBeDeleted = game;
        confirmation?.showHide();
    }
    Game? gameToBeDeleted;
    Confirmation? confirmation;
    void OnConfirm()
    {
        Games?.Remove(gameToBeDeleted!);
        confirmation?.showHide();
        gameToBeDeleted = null;
    }
    void OnCancel()
    {
        confirmation?.showHide();
        gameToBeDeleted = null;
    }
    string currentTableStyle = "table-striped";

    void ChangeTableStyle(ChangeEventArgs currentItem)
    {
        currentTableStyle = currentItem!.Value!.ToString()!;
    }
}